rdist<-function(x,p)
{
n=length(p)
r=runif(1)
b=p[1];
if((r>=0) & (r<=b))
{
y=x[1]
return(y)
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n)
{
if((r>=a) & (r <=b))
{
y=x[i]
return(y)
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
return(y)
}
}
library(PFE)
library(PFE)
library(PFE)
library(PFE)
library(PFE)
remove.packages("PFE", lib="~/R/win-library/4.1")
rendement<- c(23,20.1,21.3,27.9,29.2,33.1,26.9,22.1,24.3,27,22.9,25,35,32.8,25.9,27.1,29.7,26.1,31.1,27.9,26.1,33.2,30.8,38,33.7,31.5,35.8,36,30.1,22.9,33.2,32.2,33.5,27.3,29.1,28.2)
peinture<- gl(3,3,length = 36,labels = ("I","II","III"))
temperature<- gl(4,9, labels = ("70","85","100","115"))
D<- data.frame(rendement,peinture,temperature)
lenght(rendement)
length(rendement)
peinture <- gl(3,3,length = 36,labels = ("I","II","III"))
rendement<- c(23,20.1,21.3,27.9,29.2,33.1,26.9,22.1,24.3,27,22.9,25,35,32.8,25.9,27.1,29.7,26.1,31.1,27.9,26.1,33.2,30.8,38,33.7,31.5,35.8,36,30.1,22.9,33.2,32.2,33.5,27.3,29.1,28.2)
peinture <- gl(3,3,length = 36,labels = c("I","II","III"))
temperature <- gl(4,9, labels = c("70","85","100","115"))
D<- data.frame(rendement,peinture,temperature)
ANOVA<- aov(rendement~peinture*temperature)
summary(ANNOVA)
summary(ANOVA)
ANOVA<- aov(rendement~peinture+temperature)
ANOVA<- aov(rendement~peinture+temperature)
summary(ANOVA)
ANOVA<- aov(rendement~peinture*temperature)
summary(ANOVA)
boxplot(resistance~temperature+temperature)
boxplot(rendement~temperature+temperature)
boxplot(rendement~temperature)
boxplot(rendement~temperature+temperature)
boxplot(rendement~temperature+peinture)
interaction.plot(peinture,peinture,rendement)
interaction.plot(peinture,temperature,rendement)
interaction.plot(temperature,peinture,rendement)
tapply(rendement,temperature,shapiro.test)
bartlett.test(rendement~temperature)
bartlett.test(rendement~temperature+peinture)
bartlett.test(rendement~temperature,peinture)
install_github('NaouelB/PFeps')
library(devtools)
install_github('NaouelB/PFEps')
library(PFEps)
library(PFEps)
library(PFE)
rdist
#' simulation d'une loi discrete
#'@export
#' @param x numeric vector represent the values of the random
#' @param p numeric vector represent the probabilities
rdist<-function(x,p)
{
n=length(p)
r=runif(1)
b=p[1];
if((r>=0) & (r<=b))
{
y=x[1]
return(y)
}
else
{
a=p[1]
b=b+p[2]
for(i in 2:n)
{
if((r>=a) & (r <=b))
{
y=x[i]
return(y)
}
else
{
a=b
b=b+p[i+1]
i=i+1
}
}
y=x[n]
return(y)
}
}
simCMD<-function(y,mu,p,n)
{
m=length(y)
x<-c(rep(0,n+1));
t<-c(seq(0:n));
x[1]<-rdist(y,mu);
i<-1;
for(i in 1:n)
{
x[i+1]<-rdist(y,p[x[i],])
plot(t,x,pch=8,xlim=c(0,n),ylim=c(0,length(mu)+1),col=m);
}
return(x)
}
x<-(1,2,3)
x<- c(1,2,3)
p<- c(1/3,1/3,1/3)
y<-3
y<-(2,3,4)
y<- c(2,3,4)
mu<- c(0.5,0.9,0.7)
plot(t,x,main="Les états de CMTD",pch=4,xlim=c(0,n),ylim=c(0,length(mu)+1),xlab="T",ylab="état",col="grey");
#' Simulation Chaine De Markov a temps Discret
#'
simulationCMTD<-function(y,mu,p,n)
{
m=length(y)
x<-c(rep(0,n+1));
t<-c(seq(0:n));
x[1]<-rdist(y,mu);
i<-1;
for(i in 1:n)
{
x[i+1]<-rdist(y,p[x[i],])
}
plot(t,x,main="Les états de CMTD",pch=4,xlim=c(0,n),ylim=c(0,length(mu)+1),xlab="T",ylab="état",col="grey");
return(x)
}
plot(t,x,main="Les états de CMTD",pch=4,xlim=c(0,n),ylim=c(0,length(mu)+1),xlab="T",ylab="état",col="grey");
library(PFE)
library(PFE)
Engrais=gl(5,3,labels=c("A","B","C","D","E"))
Engrais
t.test(x,y)
help(aov)
SD <- fonction ( x )
{
par( mfrow = c( 1 , 3 ))
hist( x , col  = arc-en-ciel( 10 ))
boxplot( x , col  =  ' bleu ' )
par( mfrow  = c( 2 , 2 ))
data.frame ( min  = min( x ),
max  = max( x ),
médiane  = médiane( x ),
moyenne  = moyenne ( x ))
}
SD <- fonction ( 3,5,6 )
{
par( mfrow = c( 1 , 3 ))
hist( x , col  = arc-en-ciel( 10 ))
boxplot( x , col  =  ' bleu ' )
par( mfrow  = c( 2 , 2 ))
data.frame ( min  = min( x ),
max  = max( x ),
médiane  = médiane( x ),
moyenne  = moyenne ( x ))
SD <- fonction ( x<-(3,5,6) )
{
par( mfrow = c( 1 , 3 ))
hist( x , col  = arc-en-ciel( 10 ))
boxplot( x , col  =  ' bleu ' )
par( mfrow  = c( 2 , 2 ))
data.frame ( min  = min( x ),
max  = max( x ),
médiane  = médiane( x ),
moyenne  = moyenne ( x ))
}
SD <- fonction ( x )
SD <- function (x)
{
par(mfrow = c(1,2))
hist(x ,col= rainbow(30))
boxplot(x ,col= 'blue' )
par( mfrow  = c(1,1))
data.frame ( min = min(x),
max  = max(x),
médiane  = median(x),
moyenne  = mean(x)
variance = var( x ))
}
SD <- function (x)
{
par(mfrow = c(1,2))
hist(x ,col= rainbow(30))
boxplot(x ,col= 'blue' )
par( mfrow  = c(1,1))
data.frame ( min = min(x),
max  = max(x),
médiane  = median(x),
moyenne  = mean(x),
variance = var( x ))
}
SD <- function (x)
{
par(mfrow = c(1,2))
hist(x ,col= rainbow(30))
boxplot(x ,col= 'blue' )
par( mfrow  = c(1,1))
data.frame ( min = min(x),
max  = max(x),
médiane  = median(x),
moyenne  = mean(x),
variance = var( x ))
}
library(PFE)
library(PFE)
library(PFE)
